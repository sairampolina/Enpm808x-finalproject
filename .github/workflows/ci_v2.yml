---
name: Build & Test

on: [push, pull_request]
jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    steps:
      
      - name: Checking out
        uses: actions/checkout@v2.3.4
      
      - name: Building and testing
        uses: ichiro-its/ros2-ci@v1.0.0
        with:
          apt-packages: g++ cmake make git libgtk2.0-dev pkg-config libboost-all-dev ros-foxy-gazebo-* ros-foxy-cartographer ros-foxy-cartographer-ros ros-foxy-navigation2 ros-foxy-dynamixel-sdk ros-foxy-turtlebot3-msgs ros-foxy-turtlebot3
          external-repos: https://github.com/ROBOTIS-GIT/turtlebot3_manipulation.git 
      - name: OpenCV
        run: git clone https://github.com/opencv/opencv.git https://github.com/ROBOTIS-GIT/turtlebot3_manipulation#foxy-devel
      
      - name: install 1
        run: mkdir -p build && cd build
      
      - name: install 2
        run: cmake ../opencv

      - name: install 3
        run: make -j4

      - name: install 4
        run: sudo make install
      
      - name: Upload result to Coveralls.io
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{github.workspace}}/build/coverage.info.cleaned
# ---
# name: Build & Test

# on: [push, pull_request]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       fail-fast: false
#       matrix:
#         rosdistro: [humble]

#     container: ${{ matrix.container }}

#     defaults:
#       run:
#         shell: bash

#     steps:
#       - uses: actions/checkout@v3
#         with:
#           path: src/${{ github.workspace }}

# #       - name: ROS2 Humble setup
# #         run: |
# #           sudo apt install software-properties-common
# #           sudo add-apt-repository universe
# #           sudo apt update && sudo apt install curl
# #           sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
# #           echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
# #           sudo apt install ros-humble-desktop-full
# #           sudo apt install python3-colcon-common-extensions
#       - uses: ros-tooling/setup-ros@v0.3
#       - uses: ros-tooling/action-ros-ci@v0.2
#         with:
#           package-name: my_package
#           target-ros2-distro: humble
#           vcs-repo-file-url: https://raw.githubusercontent.com/ros2/ros2/humble/ros2.repos
          
#       - name: Create workspace
#         run: |
#           cd src
#           rosdep install -i --from-path src --rosdistro humble -y
          
#       - name: Build workspace
#         run: |
#           . /opt/ros/humble/setup.bash
#           colcon build --symlink-install
#       - name: Unit tests
#         run: |
#           sudo apt install -y lcov
#           . /opt/ros/$ROS_DISTRO/setup.bash
#           catkin config --cmake-args -DCMAKE_CXX_FLAGS="-Wall -Wno-unused --coverage -fno-inline -fno-inline-small-functions -fno-default-inline" -DCMAKE_C_FLAGS="-Wall -Wno-unused --coverage -fno-inline -fno-inline-small-functions -fno-default-inline" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXE_LINKER_FLAGS="-lgcov"
#           catkin build
#           catkin run_tests -i && catkin_test_results
#       - name: Configure Codecov
#         run: |
#           lcov --directory . --capture --output-file coverage.info
#           lcov --remove coverage.info '/opt/*' '/usr/*' '*/devel/*' '*_test*' --output-file coverage.info
#           lcov --list coverage.info
      
#       - name: Coveralls
#         uses: coverallsapp/github-action@master
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           path-to-lcov: ${{ github.workspace }}/coverage.info

# name: Build and Test Workspace
# on:
#   pull_request:
#     branches: [ main ]
#   push:
#     branches: [ main ]
# jobs:
#   build-and-test-workspace:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout this repository
#         uses: actions/checkout@v2.3.4
#         with:
#           path: repository
#       - name: Build and test workspace
#         uses: ichiro-its/ros2-build-and-test-action@main
#         with:
#           ros2-distro: humble
